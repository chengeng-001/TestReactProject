{"ast":null,"code":"var _jsxFileName = \"F:\\\\WebStormCreate4\\\\react5\\\\myapp\\\\src\\\\componets\\\\03_hooks\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react'; // 类式组件\n// export default class Hooks extends Component {\n//     state = { count: 0 }\n//     add = () => {\n//         this.setState((state) => {\n//             return { count: state.count + 1 }\n//         })\n//     }\n//     componentDidMount() {\n//         setInterval(() => {\n//             // 函数式调用\n//             this.setState(state => ({ count: state.count + 1 }));\n//         }, 1000);\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h2>当前求和为: {this.state.count}</h2>\n//                 <button onClick={this.add}>+</button>\n//             </div>\n//         )\n//     }\n// }\n// 函数式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hooks() {\n  _s();\n\n  // hooks方法调用\n  //第一个是状态 , 第二个是更新方法\n  const [count, setCount] = React.useState(0);\n  const [name, setName] = React.useState('tom');\n  React.useEffect(() => {\n    console.log(\"@\");\n  });\n\n  function add() {\n    // 第一种写法\n    // setCount(count + 1);\n    // 第二种写法\n    setCount(count => count + 1);\n  }\n\n  function changeName() {\n    // 更新字符串数据\n    setName('jiek');\n  }\n\n  console.log(count, setCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u540D\\u79F0 \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeName,\n      children: \"\\u6539\\u53D8\\u540D\\u79F0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hooks, \"so+MBu6CIqgr4om1fXyLcZT/Qv0=\");\n\n_c = Hooks;\nexport default Hooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"sources":["F:/WebStormCreate4/react5/myapp/src/componets/03_hooks/index.js"],"names":["React","Component","Hooks","count","setCount","useState","name","setName","useEffect","console","log","add","changeName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AAEb;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAAxB;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH,GAFD;;AAIA,WAASC,GAAT,GAAe;AACX;AACA;AACA;AACAP,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;AACH;;AAED,WAASS,UAAT,GAAsB;AAClB;AACAL,IAAAA,OAAO,CAAC,MAAD,CAAP;AACH;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmBC,QAAnB;AACA,sBACI;AAAA,4BACI;AAAA,kCAAQE,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,qDAAYH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEQ,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAjCQV,K;;KAAAA,K;AAmCT,eAAeA,KAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\n// 类式组件\r\n// export default class Hooks extends Component {\r\n\r\n//     state = { count: 0 }\r\n\r\n//     add = () => {\r\n//         this.setState((state) => {\r\n//             return { count: state.count + 1 }\r\n//         })\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         setInterval(() => {\r\n//             // 函数式调用\r\n//             this.setState(state => ({ count: state.count + 1 }));\r\n//         }, 1000);\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <h2>当前求和为: {this.state.count}</h2>\r\n//                 <button onClick={this.add}>+</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n// 函数式组件\r\nfunction Hooks() {\r\n\r\n    // hooks方法调用\r\n    //第一个是状态 , 第二个是更新方法\r\n    const [count, setCount] = React.useState(0);\r\n    const [name, setName] = React.useState('tom');\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"@\");\r\n    })\r\n\r\n    function add() {\r\n        // 第一种写法\r\n        // setCount(count + 1);\r\n        // 第二种写法\r\n        setCount(count => count + 1)\r\n    }\r\n\r\n    function changeName() {\r\n        // 更新字符串数据\r\n        setName('jiek')\r\n    }\r\n\r\n    console.log(count, setCount);\r\n    return (\r\n        <div>\r\n            <h1>名称 {name}</h1>\r\n            <h2>当前求和为: {count}</h2>\r\n            <button onClick={add}>+</button>\r\n            <button onClick={changeName}>改变名称</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Hooks;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}