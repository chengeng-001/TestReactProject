{"ast":null,"code":"var _jsxFileName = \"F:\\\\WebStormCreate4\\\\react5\\\\myapp\\\\src\\\\componets\\\\03_hooks\\\\index.js\";\nimport React, { Component } from 'react'; // 函数式组件\n// function Hooks() {\n//     // hooks方法调用\n//     //第一个是状态 , 第二个是更新方法\n//     const [count,setCount]= React.useState(0);\n//     const [name,setName] = React.useState('tom');\n//     function add() {\n//         // 第一种写法\n//         // setCount(count + 1);\n//         // 第二种写法\n//         setCount(count => count + 1)\n//     }\n//     function changeName() {\n//         // 更新字符串数据\n//         setName('jiek')\n//     }\n// console.log(count,setCount);\n// return (\n//     <div>\n//         <h1>名称 {name}</h1>\n//         <h2>当前求和为: {count}</h2>\n//         <button onClick={add}>+</button>\n//         <button onClick={changeName}>改变名称</button>\n//     </div>\n// )\n// }\n// export default Hooks;\n// 类式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Hooks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.add = () => {\n      this.setState(state => {\n        return {\n          count: state.count + 1\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      // 函数式调用\n      this.setState(state => state.count + 1);\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A: \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["F:/WebStormCreate4/react5/myapp/src/componets/03_hooks/index.js"],"names":["React","Component","Hooks","state","count","add","setState","componentDidMount","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AAEA;AAGA;;;AACA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCE,KAFyC,GAEjC;AAACC,MAAAA,KAAK,EAAE;AAAR,KAFiC;;AAAA,SAIzCC,GAJyC,GAInC,MAAM;AACR,WAAKC,QAAL,CAAeH,KAAD,IAAU;AACrB,eAAQ;AAACC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAtB,SAAR;AACF,OAFD;AAGH,KARwC;AAAA;;AAUzCG,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,UAAU,CAAC,MAAK;AACZ;AACA,WAAKF,QAAL,CAAcH,KAAK,IAAIA,KAAK,CAACC,KAAN,GAAY,CAAnC;AACH,KAHS,EAGR,IAHQ,CAAV;AAIH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,uDAAY,KAAKN,KAAL,CAAWC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAxBwC","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\n\r\n// 函数式组件\r\n// function Hooks() {\r\n\r\n//     // hooks方法调用\r\n//     //第一个是状态 , 第二个是更新方法\r\n//     const [count,setCount]= React.useState(0);\r\n//     const [name,setName] = React.useState('tom');\r\n    \r\n//     function add() {\r\n//         // 第一种写法\r\n//         // setCount(count + 1);\r\n//         // 第二种写法\r\n//         setCount(count => count + 1)\r\n//     }\r\n\r\n//     function changeName() {\r\n//         // 更新字符串数据\r\n//         setName('jiek')\r\n//     }\r\n    \r\n    // console.log(count,setCount);\r\n    // return (\r\n    //     <div>\r\n    //         <h1>名称 {name}</h1>\r\n    //         <h2>当前求和为: {count}</h2>\r\n    //         <button onClick={add}>+</button>\r\n    //         <button onClick={changeName}>改变名称</button>\r\n    //     </div>\r\n    // )\r\n\r\n// }\r\n\r\n// export default Hooks;\r\n\r\n\r\n// 类式组件\r\nexport default class Hooks extends Component {\r\n\r\n    state = {count: 0}\r\n\r\n    add = () => {\r\n        this.setState((state) =>{\r\n           return  {count: state.count + 1}\r\n        })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        setTimeout(()=> {\r\n            // 函数式调用\r\n            this.setState(state => state.count+1);\r\n        },1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>当前求和为: {this.state.count}</h2>\r\n                <button onClick={this.add}>+</button>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}