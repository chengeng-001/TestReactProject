{"ast":null,"code":"var _jsxFileName = \"F:\\\\WebStormCreate4\\\\react5\\\\myapp\\\\src\\\\componets\\\\08_ErrorBounday\\\\parent.js\";\nimport React, { Component } from 'react';\nimport Child from './Child';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class parent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: '' // 用于标识子组件是否发生错误\n\n    };\n  }\n\n  // 如果生命周期中发生错误就会运行\n  // 如果组件加载失败可以尝试给用户友好的提示信息\n  static getDerivedStateFromError(error) {\n    console.log(error); // 必须返回一个对象 // 控制错误给用户一个友好的提示\n\n    return {\n      hasError: error\n    };\n  } // 组件渲染引发的问题回运行该方法\n\n\n  componentDidCatch() {\n    //  可以利用统计错误次数\n    // 反馈给后台更改数据\n    console.log(\"渲染组件错误\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Parent\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), this.state.hasError ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u7F51\\u7EDC\\u4E0D\\u7A33\\u5B9A\\u8BF7\\u7A0D\\u540E\\u518D\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["F:/WebStormCreate4/react5/myapp/src/componets/08_ErrorBounday/parent.js"],"names":["React","Component","Child","parent","state","hasError","getDerivedStateFromError","error","console","log","componentDidCatch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE1CG,KAF0C,GAElC;AACJC,MAAAA,QAAQ,EAAE,EADN,CACQ;;AADR,KAFkC;AAAA;;AAM1C;AACA;AAC+B,SAAxBC,wBAAwB,CAACC,KAAD,EAAQ;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADmC,CAGnC;;AACA,WAAO;AAACF,MAAAA,QAAQ,EAAEE;AAAX,KAAP;AACH,GAbyC,CAe1C;;;AACAG,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AAKDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAIK,KAAKP,KAAL,CAAWC,QAAX,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB,gBAA2C,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAJhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAlCyC","sourcesContent":["import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class parent extends Component {\r\n\r\n    state = {\r\n        hasError: ''// 用于标识子组件是否发生错误\r\n    }\r\n\r\n    // 如果生命周期中发生错误就会运行\r\n    // 如果组件加载失败可以尝试给用户友好的提示信息\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n        \r\n        // 必须返回一个对象 // 控制错误给用户一个友好的提示\r\n        return {hasError: error}\r\n    }\r\n\r\n    // 组件渲染引发的问题回运行该方法\r\n    componentDidCatch() {\r\n        //  可以利用统计错误次数\r\n        // 反馈给后台更改数据\r\n        console.log(\"渲染组件错误\");       \r\n    }\r\n\r\n \r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Parent组件</h2>\r\n               \r\n                {/*  发生问题跳转页面 */}\r\n                {this.state.hasError ? <h2>网络不稳定请稍后再试</h2>: <Child/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}